//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WSMathsMistakes
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExceptionFaultContract", Namespace="http://schemas.datacontract.org/2004/07/MathFunctionsSVC")]
    public partial class ExceptionFaultContract : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string DescriptionField;
        
        private string MessageField;
        
        private string StatusCodeField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message
        {
            get
            {
                return this.MessageField;
            }
            set
            {
                this.MessageField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusCode
        {
            get
            {
                return this.StatusCodeField;
            }
            set
            {
                this.StatusCodeField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WSMathsMistakes.IComplexFunctions")]
    public interface IComplexFunctions
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComplexFunctions/DoWork", ReplyAction="http://tempuri.org/IComplexFunctions/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComplexFunctions/DoWork", ReplyAction="http://tempuri.org/IComplexFunctions/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComplexFunctions/Multiply", ReplyAction="http://tempuri.org/IComplexFunctions/MultiplyResponse")]
        int Multiply(int a, int b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComplexFunctions/Multiply", ReplyAction="http://tempuri.org/IComplexFunctions/MultiplyResponse")]
        System.Threading.Tasks.Task<int> MultiplyAsync(int a, int b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComplexFunctions/Divide", ReplyAction="http://tempuri.org/IComplexFunctions/DivideResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WSMathsMistakes.ExceptionFaultContract), Action="http://tempuri.org/IComplexFunctions/DivideExceptionFaultContractFault", Name="ExceptionFaultContract", Namespace="http://schemas.datacontract.org/2004/07/MathFunctionsSVC")]
        int Divide(int a, int b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComplexFunctions/Divide", ReplyAction="http://tempuri.org/IComplexFunctions/DivideResponse")]
        System.Threading.Tasks.Task<int> DivideAsync(int a, int b);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IComplexFunctionsChannel : WSMathsMistakes.IComplexFunctions, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ComplexFunctionsClient : System.ServiceModel.ClientBase<WSMathsMistakes.IComplexFunctions>, WSMathsMistakes.IComplexFunctions
    {
        
        public ComplexFunctionsClient()
        {
        }
        
        public ComplexFunctionsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName)
        {
        }
        
        public ComplexFunctionsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public ComplexFunctionsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public ComplexFunctionsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public void DoWork()
        {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync()
        {
            return base.Channel.DoWorkAsync();
        }
        
        public int Multiply(int a, int b)
        {
            return base.Channel.Multiply(a, b);
        }
        
        public System.Threading.Tasks.Task<int> MultiplyAsync(int a, int b)
        {
            return base.Channel.MultiplyAsync(a, b);
        }
        
        public int Divide(int a, int b)
        {
            return base.Channel.Divide(a, b);
        }
        
        public System.Threading.Tasks.Task<int> DivideAsync(int a, int b)
        {
            return base.Channel.DivideAsync(a, b);
        }
    }
}
